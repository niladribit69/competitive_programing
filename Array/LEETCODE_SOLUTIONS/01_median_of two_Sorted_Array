LINK - https://leetcode.com/problems/median-of-two-sorted-arrays/

class Solution {
public:
    double findMedianSortedArrays(vector<int>& arr1, vector<int>& arr2) {
    
    int i = 0, j = 0, k = 0; 
    int n1=arr1.size();
        int n2=arr2.size();
        float arr3[n1+n2];
  
    // Traverse both array 
    while (i<n1 && j <n2) 
    { 
        // Check if current element of first 
        // array is smaller than current element 
        // of second array. If yes, store first 
        // array element and increment first array 
        // index. Otherwise do same with second array 
        if (arr1[i] < arr2[j]) 
            arr3[k++] = arr1[i++]; 
        else
            arr3[k++] = arr2[j++]; 
    } 
  
    // Store remaining elements of first array 
    while (i < n1) 
        arr3[k++] = arr1[i++]; 
  
    // Store remaining elements of second array 
    while (j < n2) 
        arr3[k++] = arr2[j++]; 
    
    int mid=(n1+n2)/2;
    if((n1+n2)%2==0){
    
        return((arr3[mid]+arr3[mid-1])/2);
    }
               else{
                   return(arr3[mid]);
               }
    }
};
