#include <bits/stdc++.h>
using namespace std;

class Node{
    public:
        int data;
        Node* next;
};

void push_front(Node** head_ref,int newdata){
    Node* new_node=new Node();
    new_node->data=newdata;
    new_node->next=*head_ref;
    *head_ref=new_node;
}

void push_middle(Node* prev_node,int newdata){
    if(prev_node==NULL){
        return;
    }
    Node* new_node=new Node();
    new_node->data=newdata;
    new_node->next=prev_node->next;
    prev_node->next=new_node;
}

void push_back(Node** head_ref,int newdata){
    Node* tail=*head_ref;
    Node* new_node=new Node();
    new_node->data=newdata;
    new_node->next=NULL;
    if(*head_ref==NULL){
        *head_ref=new_node;
        return;
    }
    while(tail->next!=NULL){
        tail=tail->next;
    }
    tail->next=new_node;
    return;
}

void printList(Node *node) 
{ 
	while (node != NULL) 
	{ 
		cout<<" "<<node->data; 
		node = node->next; 
	} 
} 
void delete_key(Node** head_ref,int key){
    Node* temp=*head_ref;
    Node* prev=NULL;
    if(temp!=NULL && temp->data==key){
        *head_ref=temp->next;
        delete temp;
        return;
    }
    while(temp!=NULL && temp->data!=key){
        prev=temp;
        temp=temp->next;
    }
    if(temp==NULL){
        return;
    }
    prev->next=temp->next;
    delete temp;
}

/* Driver code*/
int main() 
{ 
	/* Start with the empty list */
	Node* head = NULL; 
	
	// Insert 6. So linked list becomes 6->NULL 
	push_back(&head, 6); 
	
	// Insert 7 at the beginning. 
	// So linked list becomes 7->6->NULL 
	push_front(&head, 7); 
	
	// Insert 1 at the beginning. 
	// So linked list becomes 1->7->6->NULL 
	push_front(&head, 1); 
	
	// Insert 4 at the end. So 
	// linked list becomes 1->7->6->4->NULL 
	push_back(&head, 4); 
	
	// Insert 8, after 7. So linked 
	// list becomes 1->7->8->6->4->NULL 
	push_middle(head->next, 8); 
	
	cout<<"Created Linked list is: "; 
	printList(head); 
    delete_key(&head,8);
    printList(head);
	
	return 0; 
} 
